// <auto-generated />
using System;
using FA23_Convocation2023_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FA23_Convocation2023_API.Migrations
{
    [DbContext(typeof(Convo24Context))]
    [Migration("20251025070509_AddRepeatCountToNotification")]
    partial class AddRepeatCountToNotification
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FA23_Convocation2023_API.Models.Bachelor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Chair")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ChairParent")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("CheckIn")
                        .HasColumnType("bit");

                    b.Property<string>("Faculty")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("HallId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Mail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Major")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SessionId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("StatusBaChelor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("TimeCheckIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "HallId" }, "IX_Bachelor_HallId");

                    b.HasIndex(new[] { "SessionId" }, "IX_Bachelor_SessionId");

                    b.ToTable("Bachelor", (string)null);
                });

            modelBuilder.Entity("FA23_Convocation2023_API.Models.CheckIn", b =>
                {
                    b.Property<int>("CheckinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CheckinID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CheckinId"));

                    b.Property<int?>("HallId")
                        .HasColumnType("int");

                    b.Property<int?>("SessionId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("CheckinId");

                    b.HasIndex(new[] { "HallId" }, "IX_CheckIn_HallId");

                    b.HasIndex(new[] { "SessionId" }, "IX_CheckIn_SessionId");

                    b.ToTable("CheckIn", (string)null);
                });

            modelBuilder.Entity("FA23_Convocation2023_API.Models.Hall", b =>
                {
                    b.Property<int>("HallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HallId"));

                    b.Property<string>("HallName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("HallId");

                    b.ToTable("Hall", (string)null);
                });

            modelBuilder.Entity("FA23_Convocation2023_API.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime?>("BroadcastAt")
                        .HasColumnType("datetime");

                    b.Property<string>("BroadcastBy")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("HallId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAutomatic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<int>("RepeatCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime?>("ScheduledAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("SessionId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("PENDING");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("NotificationId");

                    b.HasIndex("BroadcastBy");

                    b.HasIndex("CreatedBy");

                    b.HasIndex(new[] { "HallId" }, "IX_Notification_HallId");

                    b.HasIndex(new[] { "SessionId" }, "IX_Notification_SessionId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("FA23_Convocation2023_API.Models.Role", b =>
                {
                    b.Property<string>("RoleId")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("RoleID");

                    b.Property<string>("RoleName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = "1",
                            RoleName = "MN"
                        },
                        new
                        {
                            RoleId = "2",
                            RoleName = "CK"
                        },
                        new
                        {
                            RoleId = "3",
                            RoleName = "US"
                        },
                        new
                        {
                            RoleId = "4",
                            RoleName = "NO"
                        });
                });

            modelBuilder.Entity("FA23_Convocation2023_API.Models.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<int?>("Session1")
                        .HasColumnType("int")
                        .HasColumnName("Session");

                    b.HasKey("SessionId");

                    b.ToTable("Session", (string)null);

                    b.HasData(
                        new
                        {
                            SessionId = 100,
                            Session1 = 100
                        },
                        new
                        {
                            SessionId = 111,
                            Session1 = 111
                        });
                });

            modelBuilder.Entity("FA23_Convocation2023_API.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("UserID");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("RoleID");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "RoleId" }, "IX_Users_RoleID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = "1",
                            Email = "mana@gmail.com",
                            FullName = "Mana",
                            Password = "123456",
                            RoleId = "1"
                        },
                        new
                        {
                            UserId = "2",
                            Email = "checkin@gmail.com",
                            FullName = "CheckIn",
                            Password = "123456",
                            RoleId = "2"
                        },
                        new
                        {
                            UserId = "3",
                            Email = "user@gmail.com",
                            FullName = "User",
                            Password = "123456",
                            RoleId = "3"
                        },
                        new
                        {
                            UserId = "4",
                            Email = "noticer@gmail.com",
                            FullName = "Noticer",
                            Password = "123456",
                            RoleId = "4"
                        });
                });

            modelBuilder.Entity("FA23_Convocation2023_API.Models.Bachelor", b =>
                {
                    b.HasOne("FA23_Convocation2023_API.Models.Hall", "Hall")
                        .WithMany("Bachelors")
                        .HasForeignKey("HallId")
                        .HasConstraintName("FK__Bachelor__HallId__403A8C7D");

                    b.HasOne("FA23_Convocation2023_API.Models.Session", "Session")
                        .WithMany("Bachelors")
                        .HasForeignKey("SessionId")
                        .HasConstraintName("FK__Bachelor__Sessio__412EB0B6");

                    b.Navigation("Hall");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("FA23_Convocation2023_API.Models.CheckIn", b =>
                {
                    b.HasOne("FA23_Convocation2023_API.Models.Hall", "Hall")
                        .WithMany("CheckIns")
                        .HasForeignKey("HallId")
                        .HasConstraintName("FK__CheckIn__HallId__440B1D61");

                    b.HasOne("FA23_Convocation2023_API.Models.Session", "Session")
                        .WithMany("CheckIns")
                        .HasForeignKey("SessionId")
                        .HasConstraintName("FK__CheckIn__Session__44FF419A");

                    b.Navigation("Hall");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("FA23_Convocation2023_API.Models.Notification", b =>
                {
                    b.HasOne("FA23_Convocation2023_API.Models.User", "BroadcastByUser")
                        .WithMany()
                        .HasForeignKey("BroadcastBy")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FA23_Convocation2023_API.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FA23_Convocation2023_API.Models.Hall", "Hall")
                        .WithMany()
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("FA23_Convocation2023_API.Models.Session", "Session")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("BroadcastByUser");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Hall");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("FA23_Convocation2023_API.Models.User", b =>
                {
                    b.HasOne("FA23_Convocation2023_API.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Users__RoleID__49C3F6B7");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FA23_Convocation2023_API.Models.Hall", b =>
                {
                    b.Navigation("Bachelors");

                    b.Navigation("CheckIns");
                });

            modelBuilder.Entity("FA23_Convocation2023_API.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FA23_Convocation2023_API.Models.Session", b =>
                {
                    b.Navigation("Bachelors");

                    b.Navigation("CheckIns");
                });
#pragma warning restore 612, 618
        }
    }
}
